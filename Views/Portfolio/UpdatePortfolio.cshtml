@model EntityLayer.Concrete.Portfolio
@{
    ViewData["Title"] = "UpdatePortfolio";
    Layout = "~/Views/Shared/_NewAdminLayout.cshtml";
}


@using (Html.BeginForm("UpdatePortfolio", "Portfolio", FormMethod.Post))
{
    <div class="col-12 grid-margin stretch-card">
        <div class="card">
            <div class="card-body">
                <h4 class="card-title">Proje Düzenleme Sayfası</h4>
                @Html.HiddenFor(x => x.PortfolioID)
                <br />

                @Html.Label("Proje Başlığı")
                @Html.TextBoxFor(x => x.Name, new { @class = "form-control" })
                <br />
                @Html.Label("Görsel 1")
                @Html.TextBoxFor(x => x.ImageUrl, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.ImageUrl)
                <br />

                @Html.Label("Görsel 2")
                @Html.TextBoxFor(x => x.ImageUrl2, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.ImageUrl2)
                <br />
                @Html.Label("Proje Url")
                @Html.TextBoxFor(x => x.WebSiteUrl, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.WebSiteUrl)
                <br />
                @Html.Label("Fiyat")
                @Html.TextBoxFor(x => x.Price, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.Price)
                <br />
                @Html.Label("Tamamlanma Oranı")
                @Html.TextBoxFor(x => x.Value, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.Value)
                <br />

                <button class="btn btn-success">Güncelle</button>
            </div>
        </div>
    </div>
}

